TemplateFormatVersion: 2010-09-09
Description: Ec2 instance to host Jenkins
Parameters:
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.nano
      - t2.micro
    ConstraintDescription: must be a valid EC2 instance type.
  SSHLocation:
    Description: ' The IP address range that can be used to SSH to the EC2 instances'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Mappings:
  AWSInstanceType2Arch:
    t2.nano:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
  AWSRegionArch2AMI:
    us-east-1:
      HVM64: ami-cd0f5cb6
    us-west-2:
      HVM64: ami-6e1a0117
Resources:
  JenkinsServer:
    Type: 'AWS::EC2::Instance'
    Properties:
      UserData:
        Fn::Base64: !Sub |
            #!/bin/bash
            apt-get update
            apt-get install -y linux-image-extra-$(uname -r) linux-image-extra-virtual apt-transport-https ca-certificates curl software-properties-common
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
            add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
            apt-get update
            apt-get install -y docker-ce
            groupadd docker
            gpasswd -a ubuntu docker
            docker run -d -p 49001:80 -v $PWD/jenkins:/var/jenkins_home -t jenkins/jenkins
      ImageId: !FindInMap 
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap 
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      InstanceType: !Ref InstanceType
      KeyName: damian.velazquez
      BlockDeviceMappings:
        - DeviceName: /dev/sdm
          Ebs:
            VolumeType: io1
            Iops: '200'
            DeleteOnTermination: 'True'
            VolumeSize: '20'
        - DeviceName: /dev/sdk
          NoDevice: {}
      SecurityGroupIds:
        - !Ref JenkinsSG
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 7edf9a96-2509-4e08-b11a-cb2a20ca5652
  JenkinsSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable HTTP access via port 80
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 4b4fb48b-5bfa-4677-be4c-2a2d6f7e17d7
Metadata:
  'AWS::CloudFormation::Designer':
    7edf9a96-2509-4e08-b11a-cb2a20ca5652:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 90
      z: 1
      embeds: []
      isassociatedwith:
        - 4b4fb48b-5bfa-4677-be4c-2a2d6f7e17d7
    4b4fb48b-5bfa-4677-be4c-2a2d6f7e17d7:
      size:
        width: 60
        height: 60
      position:
        x: -40
        'y': 90
      z: 0
      embeds: []
    5b6d4d40-c521-4865-a3b7-d7d8a69378bc:
      source:
        id: 7edf9a96-2509-4e08-b11a-cb2a20ca5652
      target:
        id: 4b4fb48b-5bfa-4677-be4c-2a2d6f7e17d7
      z: 2

